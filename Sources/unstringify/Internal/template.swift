import Foundation

func template(keys: [String], formattedKeys: [FormatKey], richKeys: [String], richFormattedKeys: [FormatKey]) -> String {
    let file: String =
        """
            //  Generated by Unstringify.
            //  DO NOT EDIT!

            import Unstringified

            private final class _Unstringified {}

            extension Unstringified {
                public var localizableStringsBundle: Bundle {
                    return Bundle(for: _Unstringified.self)
                }
            }

            public enum Text: String, Unstringified {
            \tpublic typealias StringType = String
            \tcase \(keys.joined(separator: ", "))
            }

            public enum Format: Unstringified {
            \tpublic typealias StringType = String
            \tcase \(formattedKeys.map { $0.description }.joined(separator: ", "))
            }

            public enum RichText: String, Unstringified {
            \tpublic typealias StringType = NSAttributedString
            \tcase \(richKeys.joined(separator: ", "))
            }

            public enum RichFormat: Unstringified {
            \tpublic typealias StringType = NSAttributedString
            \tcase \(richFormattedKeys.map { $0.description }.joined(separator: ", "))
            }

            """.replacingOccurrences(of: "\t", with: "    ")
    return file
}
